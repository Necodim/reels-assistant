const bot = require('../bot');
const { adminUsers } = require('../helpers/admin');
const buttons = require('../helpers/buttons');
const { getUser, upsertUser, updateUserState } = require('../../db/service/userService');
const { createForumTopic, reopenForumTopic, closeForumTopic } = require('../send');

const start = async (msg) => {
  const chatId = msg.chat.id;
  
  try {
    const disclaimerMessage = '<i>–í –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏–ª–∏ –ø–æ–Ω—è—Ç–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ–º–ø–∞–Ω–∏–µ–π Meta. –ö–æ–º–ø–∞–Ω–∏—è Meta Platforms Inc. –ø—Ä–∏–∑–Ω–∞–Ω–∞ —ç–∫—Å—Ç—Ä–µ–º–∏—Å—Ç—Å–∫–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π –∏ –∑–∞–ø—Ä–µ—â–µ–Ω–∞ –≤ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏. –ü—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏–µ –µ–π —Å–æ—Ü—Å–µ—Ç–∏ Facebook –∏ Instagram —Ç–∞–∫–∂–µ –∑–∞–ø—Ä–µ—â–µ–Ω—ã.</i>'
    await bot.sendMessage(chatId, disclaimerMessage, { parse_mode: 'HTML' });

    const user = await upsertUser(msg);
    await updateUserState(chatId, '');
    let message, options = {};
    if (user.isExpert) {
      const topicName = user.username ? user.username : user.firstName + ` ${user.lastName}`;
      const topicId = user.groupTopicId;
      const topic = !!topicId ? await reopenForumTopic(topicId, topicName) : await createForumTopic(topicName);
      await upsertUser(msg, { groupTopicId: topic.message_thread_id });

      message = '–í—ã –º–æ–∂–µ—Ç–µ –æ–ø—É–±–ª–∏–∫–æ–≤—ã–≤–∞—Ç—å –∏–¥–µ–∏ –∏ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å —Ä–æ–ª–∏–∫–∏ –ø–æ–¥–æ–ø–µ—á–Ω—ã—Ö. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –±–æ—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏.'
      if (!user.about) {
        await updateUserState(chatId, 'aboutAwaiting');
        message += `

–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ. –≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–∏—Ç, –∫–æ–≥–¥–∞ –æ—Ñ–æ—Ä–º–∏—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ —Å—Ç–∞–Ω–µ—Ç –≤–∞—à–∏–º –ø–æ–¥–æ–ø–µ—á–Ω—ã–º.`;
      } else {
        options = buttons.mainMenu('expert');
      }
    } else {
      if (!!user.groupTopicId) {
        await closeForumTopic(user.groupTopicId);
      }
      message = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —ç–∫—Å–ø–µ—Ä—Ç–æ–≤-—Ä–∏–ª—Å–º—ç–π–∫–µ—Ä–æ–≤ –∏ –±–ª–æ–≥–µ—Ä–æ–≤. –í—ã –º–æ–∂–µ—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–¥–µ–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –∏ —Ç—É—Ç –∂–µ –∏—Ö —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∞—Ç—å —Ñ–∏–¥–±—ç–∫ –Ω–∞ –≤–∞—à–∏ –ø–æ—Å—Ç—ã. –î–ª—è —ç—Ç–æ–≥–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ:';
      options = buttons.mainMenu('user');
    }
    await bot.sendMessage(chatId, message, options);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ / —Å–æ–∑–¥–∞–Ω–∏–∏ / –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –∏–ª–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start:', error);
  }
};

const home = async (msg) => {
  const chatId = msg.chat.id;
  const message = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é';

  try {
    const user = await getUser(msg);
    await updateUserState(chatId, '');
    const options = user.isExpert ? buttons.mainMenu('expert') : buttons.mainMenu('user');
    await bot.sendMessage(chatId, message, options);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /home:', error);
  }
};

const help = async (msg) => {
  const chatId = msg.chat.id;
  const message = '–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ @snezone.';
  try {
    await updateUserState(chatId, '');
    await bot.sendMessage(chatId, message);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help', error);
  }
};

const expert = async (msg) => {
  const chatId = msg.chat.id;
  const options = buttons.home();
  try {
    await updateUserState(chatId, 'forwardExpertWaiting');
    let message;
    if (adminUsers.map(user => user.id).indexOf(chatId) !== -1) {
      message = '–ü–µ—Ä–µ—à–ª–∏—Ç–µ –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç–∫—Å–ø–µ—Ä—Ç–æ–º –∏–ª–∏ —Ä–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å.';
    } else {
      message = '–í–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω —ç—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª.';
    }
    await bot.sendMessage(chatId, message, options);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /expert', error);
  }
};

const send = async (msg) => {
  const chatId = msg.chat.id;
  const message = '–Ø –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–≤–æ–µ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—é. –ö–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ? –ù–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–∏–∫–Ω–µ–π–º –≤ –≤–∏–¥–µ: @snezone';
  const options = {reply_parameters: {message_id: msg.message_id}, reply_markup: {inline_keyboard: [buttons.homeButton], force_reply: true, input_field_placeholder: '@username'}};

  if (adminUsers.map(user => user.id).indexOf(chatId) !== -1) {
    try {
      await updateUserState(chatId, 'awaitUsernameToSendMessage')
      await bot.sendMessage(chatId, message, options);
    } catch (error) {
      console.log('/test error:', error)
    }
  }
};

const snezone = async (msg) => {
  const chatId = msg.chat.id;
  const options = buttons.home();

  if (adminUsers.map(user => user.id).indexOf(chatId) !== -1) {
    try {
      const user = await getUser(msg);
      const message = `–í–∞—à–∞ —Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –≤—ã ${user.isExpert ? '–æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' : '—ç–∫—Å–ø–µ—Ä—Ç'}!`;
      if (user && user.isExpert) {
        if (!!user.groupTopicId) {
          await closeForumTopic(user.groupTopicId);
        }
        await upsertUser(msg, { isExpert: false });
      } else {
        const topicName = user.username ? user.username : user.firstName + ` ${user.lastName}`;
        const topicId = user.groupTopicId;
        const topic = !!topicId ? await reopenForumTopic(topicId, topicName) : await createForumTopic(topicName);

        await upsertUser(msg, { isExpert: true, groupTopicId: topic.message_thread_id });
      }
      await updateUserState(chatId, '');
      await bot.sendMessage(chatId, message, options);
    } catch (error) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —ç–∫—Å–ø–µ—Ä—Ç–æ–º –∏–ª–∏ —Ä–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –µ–≥–æ:', error)
    }
  }
};

const test = async (msg) => {
  const chatId = msg.chat.id;
  const message = '–¢–µ—Å—Ç';
  const options = {
    reply_markup: {
      inline_keyboard: [
        [{ text: '–¢–µ—Å—Ç', callback_data: 'test' }],
        [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'home' }],
      ]
    }
  };

  if (adminUsers.map(user => user.id).indexOf(chatId) !== -1) {
    try {
      await bot.sendMessage(chatId, message, options);
    } catch (error) {
      console.log('/test error:', error)
    }
  }
};

module.exports = {
  start,
  home,
  help,
  expert,
  send,
  snezone,
  test,
};