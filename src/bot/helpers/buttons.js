const mainMenu = {
  user: {
    reply_markup: {
      inline_keyboard: [
        [{ text: '‚èØÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–æ–ª–∏–∫', callback_data: 'sendVideo' }],
        [{ text: 'üí° –ü–æ–ª—É—á–∏—Ç—å –∏–¥–µ—é', callback_data: 'getIdea' }],
        [
          { text: 'üí∞ –ü–æ–¥–ø–∏—Å–∫–∞', callback_data: 'subscription' },
          { text: '‚ùì –ü–æ–º–æ—â—å', callback_data: 'support' }
        ],
        // [{ text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'settings' }],
      ]
    }
  },
  expert: {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üí° –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏–¥–µ—é', callback_data: 'createIdea' }],
        [{ text: '‚≠êÔ∏è –û—Ü–µ–Ω–∏—Ç—å —Ä–æ–ª–∏–∫', callback_data: 'getVideo' }],
        [{ text: 'üîî –ü—É—à–Ω—É—Ç—å –ø–æ–¥–æ–ø–µ—á–Ω—ã—Ö', callback_data: 'toPush' }],
        // [{ text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'settings' }],
      ]
    }
  }
}

const goHome = {
  reply_markup: {
    inline_keyboard: [
      [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'home' }],
    ]
  }
}

const moreOrGoHome = {
  // user: (ideaId = '') => {
  //   return {
  //     reply_markup: {
  //       inline_keyboard: [
  //         [{ text: 'üí° –ï—â—ë –∏–¥–µ—è', callback_data: 'getIdea' }, { text: '‚≠êÔ∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ', callback_data: `favrt:${ideaId}` }],
  //         [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'home' }],
  //       ]
  //     }
  //   }
  // },
  user: {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üí° –ï—â—ë –∏–¥–µ—è', callback_data: 'getIdea' }],
        [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'home' }],
      ]
    }
  },
  expert: {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üí° –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ—â—ë –æ–¥–Ω—É', callback_data: 'createIdea' }],
        [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'home' }],
      ]
    }
  }
}

const cancel = {
  videoEvaluate: (videoId, videoMessageNumber) => {
    return {
      reply_markup: {
        inline_keyboard: [
          [{ text: '–û—Ç–º–µ–Ω–∏—Ç—å', callback_data: `cnlve:${videoId}:${videoMessageNumber}` }],
        ]
      }
    }
  }
}

const purchase = {
  user: (subscriptions = []) => {
    let buttons = [
      [{ text: 'üîë –î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É', callback_data: 'prchs:0' }]
    ];
    let currentLine = [];
    subscriptions.forEach((subscription, index) => {
      let emoji;
      switch (index) {
        case 0: emoji ='1Ô∏è‚É£'; break;
        case 1: emoji ='2Ô∏è‚É£'; break;
        case 2: emoji ='3Ô∏è‚É£'; break;
        case 3: emoji ='4Ô∏è‚É£'; break;
        case 4: emoji ='5Ô∏è‚É£'; break;
        case 5: emoji ='6Ô∏è‚É£'; break;
        case 6: emoji ='7Ô∏è‚É£'; break;
        case 7: emoji ='8Ô∏è‚É£'; break;
        case 8: emoji ='9Ô∏è‚É£'; break;
        case 9: emoji ='üîü'; break;
        default: emoji = index + 1; break;
      }
      currentLine.push({ text: emoji, callback_data: `cnlsb:${subscription.id}` });
      if ((index + 1) % 5 === 0 || index === subscriptions.length - 1) {
        buttons.push(currentLine);
        currentLine = [];
      }
    });
    buttons.push([{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'home' }]);
    console.log(buttons);

    return {reply_markup: {inline_keyboard: buttons}};
  },
  cloudpayments: (link) => {
    const buttons = [
      [{ text: 'üîó –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', web_app: {url: link} }],
      [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'home' }],
    ];
    return {reply_markup: {inline_keyboard: buttons}};
  }
}

const difficulty = (id) => {
  return {
    reply_markup: {
      inline_keyboard: [
        [
          { text: '1', callback_data: `dfclt:1:${id}` },
          { text: '2', callback_data: `dfclt:2:${id}` },
          { text: '3', callback_data: `dfclt:3:${id}` }
        ],
      ]
    }
  }
}

const hashtags = (id) => {
  return {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üí∞ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è', callback_data: `hshtg:1:${id}` },
          { text: 'üß† –≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è', callback_data: `hshtg:2:${id}` },
        ],
      ]
    }
  }
}

const channel = {
  delete: (id) => {
    return {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', callback_data: `chanl:del:${id}` }],
        ]
      }
    }
  }
}

const snezone = {
  reply_markup: {
    inline_keyboard: [
      [{ text: '–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É', url: 'tg://resolve?domain=snezone' }],
      [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'home' }],
    ]
  }
}

module.exports = {
  mainMenu,
  goHome,
  moreOrGoHome,
  cancel,
  purchase,
  difficulty,
  hashtags,
  channel,
  snezone,
}